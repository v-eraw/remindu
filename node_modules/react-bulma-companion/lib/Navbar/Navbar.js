"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Navbar;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _NavbarBrand = _interopRequireDefault(require("./NavbarBrand"));

var _NavbarBurger = _interopRequireDefault(require("./NavbarBurger"));

var _NavbarDivider = _interopRequireDefault(require("./NavbarDivider"));

var _NavbarDropdown = _interopRequireDefault(require("./NavbarDropdown"));

var _NavbarEnd = _interopRequireDefault(require("./NavbarEnd"));

var _NavbarItem = _interopRequireDefault(require("./NavbarItem"));

var _NavbarLink = _interopRequireDefault(require("./NavbarLink"));

var _NavbarMenu = _interopRequireDefault(require("./NavbarMenu"));

var _NavbarStart = _interopRequireDefault(require("./NavbarStart"));

var _excluded = ["children", "className", "color", "component", "fixed", "shadow", "spaced", "transparent"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Navbar(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      component = _ref.component,
      fixed = _ref.fixed,
      shadow = _ref.shadow,
      spaced = _ref.spaced,
      transparent = _ref.transparent,
      props = _objectWithoutProperties(_ref, _excluded);

  var Element = component; // Colors

  var colorMap = {
    primary: 'is-primary',
    link: 'is-link',
    info: 'is-info',
    success: 'is-success',
    warning: 'is-warning',
    danger: 'is-danger',
    white: 'is-white',
    black: 'is-black',
    light: 'is-light',
    dark: 'is-dark'
  };
  var isColor = color && colorMap[color]; // Fixed

  var fixedMap = {
    top: 'is-fixed-top',
    bottom: 'is-fixed-bottom',
    'top-desktop': 'is-fixed-top-desktop',
    'bottom-desktop': 'is-fixed-bottom-desktop',
    'top-touch': 'is-fixed-top-touch',
    'bottom-touch': 'is-fixed-bottom-touch'
  };
  var isFixed = fixed && fixedMap[fixed];
  var classes = (0, _classnames["default"])('navbar', className, isColor, isFixed, {
    'is-transparent': transparent,
    'is-spaced': spaced,
    'has-shadow': shadow
  });
  return /*#__PURE__*/_react["default"].createElement(Element, _extends({
    role: "navigation",
    className: classes
  }, props), children);
}

Navbar.Brand = _NavbarBrand["default"];
Navbar.Burger = _NavbarBurger["default"];
Navbar.Divider = _NavbarDivider["default"];
Navbar.Dropdown = _NavbarDropdown["default"];
Navbar.End = _NavbarEnd["default"];
Navbar.Item = _NavbarItem["default"];
Navbar.Link = _NavbarLink["default"];
Navbar.Menu = _NavbarMenu["default"];
Navbar.Start = _NavbarStart["default"];
Navbar.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  color: _propTypes["default"].oneOf(['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark']),
  fixed: _propTypes["default"].oneOf(['top', 'bottom', 'top-desktop', 'bottom-desktop', 'top-touch', 'bottom-touch']),
  shadow: _propTypes["default"].bool,
  transparent: _propTypes["default"].bool,
  spaced: _propTypes["default"].bool
};
Navbar.defaultProps = {
  className: undefined,
  children: null,
  component: 'nav',
  color: undefined,
  fixed: undefined,
  shadow: false,
  transparent: false,
  spaced: false
};