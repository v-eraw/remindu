"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Tabs;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _TabsList = _interopRequireDefault(require("./TabsList"));

var _TabsListItem = _interopRequireDefault(require("./TabsListItem"));

var _TabsLink = _interopRequireDefault(require("./TabsLink"));

var _excluded = ["align", "boxed", "children", "className", "component", "fullwidth", "rounded", "size", "toggle"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Tabs(_ref) {
  var align = _ref.align,
      boxed = _ref.boxed,
      children = _ref.children,
      className = _ref.className,
      component = _ref.component,
      fullwidth = _ref.fullwidth,
      rounded = _ref.rounded,
      size = _ref.size,
      toggle = _ref.toggle,
      props = _objectWithoutProperties(_ref, _excluded);

  var Element = component; // Sizes

  var sizeMap = {
    small: 'is-small',
    medium: 'is-medium',
    large: 'is-large'
  };
  var isSize = size && sizeMap[size]; // Align

  var alignMap = {
    center: 'is-centered',
    right: 'is-right'
  };
  var isAlign = align && alignMap[align];
  var classes = (0, _classnames["default"])('tabs', className, isSize, isAlign, {
    'is-boxed': boxed,
    'is-fullwidth': fullwidth,
    'is-toggle': toggle,
    'is-toggle-rounded': toggle && rounded
  });
  return /*#__PURE__*/_react["default"].createElement(Element, _extends({
    className: classes
  }, props), children);
}

Tabs.List = _TabsList["default"];
Tabs.ListItem = _TabsListItem["default"];
Tabs.Link = _TabsLink["default"];
Tabs.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  size: _propTypes["default"].oneOf(['small', 'medium', 'large']),
  align: _propTypes["default"].oneOf(['center', 'right']),
  boxed: _propTypes["default"].bool,
  fullwidth: _propTypes["default"].bool,
  toggle: _propTypes["default"].bool,

  /**
   * Use with toggle to create rounded toggle tabs
   */
  rounded: _propTypes["default"].bool
};
Tabs.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  align: undefined,
  boxed: false,
  fullwidth: false,
  toggle: false,
  rounded: false
};