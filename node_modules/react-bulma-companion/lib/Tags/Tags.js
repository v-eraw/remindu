"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Tags;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _excluded = ["addons", "align", "children", "className", "component", "size"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Tags(_ref) {
  var addons = _ref.addons,
      align = _ref.align,
      children = _ref.children,
      className = _ref.className,
      component = _ref.component,
      size = _ref.size,
      props = _objectWithoutProperties(_ref, _excluded);

  var Element = component; // Sizes

  var sizeMap = {
    medium: 'are-medium',
    large: 'are-large'
  };
  var areSize = size && sizeMap[size]; // Align

  var alignMap = {
    center: 'is-centered',
    right: 'is-right'
  };
  var isAlign = align && alignMap[align];
  var classes = (0, _classnames["default"])('tags', className, areSize, isAlign, {
    'has-addons': addons
  });
  return /*#__PURE__*/_react["default"].createElement(Element, _extends({
    className: classes
  }, props), children);
}

Tags.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  size: _propTypes["default"].oneOf(['medium', 'large']),
  addons: _propTypes["default"].bool,
  align: _propTypes["default"].oneOf(['center', 'right'])
};
Tags.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  addons: false,
  align: undefined
};