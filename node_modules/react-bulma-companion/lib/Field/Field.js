"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Field;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _FieldLabel = _interopRequireDefault(require("./FieldLabel"));

var _FieldBody = _interopRequireDefault(require("./FieldBody"));

var _excluded = ["align", "addons", "children", "className", "component", "expanded", "fullwidth", "grouped", "horizontal", "multiline", "narrow"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Field(_ref) {
  var align = _ref.align,
      addons = _ref.addons,
      children = _ref.children,
      className = _ref.className,
      component = _ref.component,
      expanded = _ref.expanded,
      fullwidth = _ref.fullwidth,
      grouped = _ref.grouped,
      horizontal = _ref.horizontal,
      multiline = _ref.multiline,
      narrow = _ref.narrow,
      props = _objectWithoutProperties(_ref, _excluded);

  var Element = component;
  var classes = (0, _classnames["default"])('field', className, {
    'is-grouped': grouped,
    'has-addons': addons,
    'has-addons-centered': addons && align === 'center',
    'has-addons-right': addons && align === 'right',
    'has-addons-fullwidth': addons && fullwidth,
    'is-grouped-centered': grouped && align === 'center',
    'is-grouped-right': grouped && align === 'right',
    'is-grouped-multiline': grouped && multiline,
    'is-horizontal': horizontal,
    'is-narrow': narrow
  });
  return /*#__PURE__*/_react["default"].createElement(Element, _extends({
    className: classes
  }, props), children);
}

Field.Label = _FieldLabel["default"];
Field.Body = _FieldBody["default"];
Field.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  grouped: _propTypes["default"].bool,
  addons: _propTypes["default"].bool,
  align: _propTypes["default"].oneOf(['center', 'right']),
  multiline: _propTypes["default"].bool,
  fullwidth: _propTypes["default"].bool,
  horizontal: _propTypes["default"].bool,
  expanded: _propTypes["default"].bool,
  narrow: _propTypes["default"].bool
};
Field.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  grouped: false,
  addons: false,
  align: undefined,
  multiline: false,
  fullwidth: false,
  horizontal: false,
  expanded: false,
  narrow: false
};