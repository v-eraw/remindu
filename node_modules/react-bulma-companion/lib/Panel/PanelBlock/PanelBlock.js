"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = PanelBlock;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _excluded = ["active", "children", "className", "component", "label", "link", "wrapped"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function PanelBlock(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      component = _ref.component,
      label = _ref.label,
      link = _ref.link,
      wrapped = _ref.wrapped,
      props = _objectWithoutProperties(_ref, _excluded);

  if (process.env.NODE_ENV === 'development' && link) {
    // eslint-disable-next-line
    console.warn('Using the `link` prop is deprecated. Use `component="a"` instead.');
  }

  if (process.env.NODE_ENV === 'development' && label) {
    // eslint-disable-next-line
    console.warn('Using the `label` prop is deprecated. Use `component="label"` instead.');
  }

  var Element = link ? 'a' : label ? 'label' : component;
  var classes = (0, _classnames["default"])('panel-block', className, {
    'is-active': active,
    'is-wrapped': wrapped
  });
  return /*#__PURE__*/_react["default"].createElement(Element, _extends({
    className: classes
  }, props), children);
}

PanelBlock.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,

  /**
    Deprecation Warning: Use `component="a"`.
  */
  link: _propTypes["default"].bool,

  /**
    Deprecation Warning: Use `component="label"`.
  */
  label: _propTypes["default"].bool,
  active: _propTypes["default"].bool,
  wrapped: _propTypes["default"].bool
};
PanelBlock.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  link: false,
  label: false,
  active: false,
  wrapped: false
};